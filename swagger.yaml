# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Events API
  description: Move your app forward with the Events API
  version: "1.0.0"
# the domain of the service
host: api.uber.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /events:
    get:
      summary: Get event list
      tags:
        - Events
      responses:
        200:
          description: List of all events
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /event/:
    get:
      summary: Get details of a concrete event
      parameters:
        - name: id
          in: query
          description: Passing the Id of the event
          required: true
          type: number
          format: int
      tags:
        - Events
      responses:
        200:
          description: A concrete event
          schema:
              $ref: '#/definitions/Event'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /events/create:
    post:
      summary: Create an event
      parameters:
        - name: event
          in: body
          description: Creates an event and adds to database.
          required: true
          schema:
              $ref: '#/definitions/Event'
      tags:
        - Events
      responses:
        200:
          description: An array of products
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /login:
    post:
      summary: Sends login credentials.
      parameters:
        - name: credentials
          in: body
          description: Credentials of user
          required: true
          schema:
            $ref: '#/definitions/Credentials'
      tags:
        - Login
      responses:
        200:
          description: Successful login.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /event/respond:
    post:
      summary: Respond to event.
      parameters:        
        - name: id
          in: query
          description: Passing the Id of the event
          required: true
          type: number
          format: int
        - name: respond
          in: query
          description: Passing the respond to the event
          required: true
          type: number
          format: int
      tags:
        - Events
      responses:
        200:
          description: Responded to event.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Event:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      capacity:
        type: string
        description: Capacity of product. For example, 4 people.
      image:
        type: string
        description: Image URL representing the product.
  Credentials:
    type: object
    properties:
      user:
        type: string
        description: Username
      password:
        type: string
        description: Password
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
